This is pdfTeX, Version 3.14159265-2.6-1.40.19 (TeX Live 2018) (preloaded format=latex 2018.4.16)  23 MAY 2020 19:29
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**01Preamble.tex
(./01Preamble.tex
LaTeX2e <2018-04-01> patch level 2
Babel <3.18> and hyphenation patterns for 84 language(s) loaded.
(/usr/local/texlive/2018/texmf-dist/tex/latex/amsmath/amsmath.sty
Package: amsmath 2017/09/02 v2.17a AMS math features
\@mathmargin=\skip41

For additional information on amsmath, use the `?' option.
(/usr/local/texlive/2018/texmf-dist/tex/latex/amsmath/amstext.sty
Package: amstext 2000/06/29 v2.01 AMS text

(/usr/local/texlive/2018/texmf-dist/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0 generic functions
\@emptytoks=\toks14
\ex@=\dimen102
))
(/usr/local/texlive/2018/texmf-dist/tex/latex/amsmath/amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d Bold Symbols
\pmbraise@=\dimen103
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/amsmath/amsopn.sty
Package: amsopn 2016/03/08 v2.02 operator names
)
\inf@bad=\count80
LaTeX Info: Redefining \frac on input line 213.
\uproot@=\count81
\leftroot@=\count82
LaTeX Info: Redefining \overline on input line 375.
\classnum@=\count83
\DOTSCASE@=\count84
LaTeX Info: Redefining \ldots on input line 472.
LaTeX Info: Redefining \dots on input line 475.
LaTeX Info: Redefining \cdots on input line 596.
\Mathstrutbox@=\box26
\strutbox@=\box27
\big@size=\dimen104
LaTeX Font Info:    Redeclaring font encoding OML on input line 712.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 713.
\macc@depth=\count85
\c@MaxMatrixCols=\count86
\dotsspace@=\muskip10
\c@parentequation=\count87
\dspbrk@lvl=\count88
\tag@help=\toks15
\row@=\count89
\column@=\count90
\maxfields@=\count91
\andhelp@=\toks16
\eqnshift@=\dimen105
\alignsep@=\dimen106
\tagshift@=\dimen107
\tagwidth@=\dimen108
\totwidth@=\dimen109
\lineht@=\dimen110
\@envbody=\toks17
\multlinegap=\skip42
\multlinetaggap=\skip43
\mathdisplay@stack=\toks18
LaTeX Info: Redefining \[ on input line 2817.
LaTeX Info: Redefining \] on input line 2818.
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/amsfonts/amssymb.sty
Package: amssymb 2013/01/14 v3.01 AMS font symbols

(/usr/local/texlive/2018/texmf-dist/tex/latex/amsfonts/amsfonts.sty
Package: amsfonts 2013/01/14 v3.01 Basic AMSFonts support
\symAMSa=\mathgroup4
\symAMSb=\mathgroup5
LaTeX Font Info:    Overwriting math alphabet `\mathfrak' in version `bold'
(Font)                  U/euf/m/n --> U/euf/b/n on input line 106.
))
(/usr/local/texlive/2018/texmf-dist/tex/latex/tools/xspace.sty
Package: xspace 2014/10/28 v1.13 Space after command names (DPC,MH)
)

! LaTeX Error: \usepackage before \documentclass.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.7 \usepackage{
                bm}
\usepackage may only appear in the document preamble, i.e.,
between \documentclass and \begin{document}.


! LaTeX Error: \usepackage before \documentclass.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.8 \usepackage{
                fancyhdr}
\usepackage may only appear in the document preamble, i.e.,
between \documentclass and \begin{document}.


! LaTeX Error: \usepackage before \documentclass.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.9 \usepackage{
                tikz}
\usepackage may only appear in the document preamble, i.e.,
between \documentclass and \begin{document}.


! LaTeX Error: \usepackage before \documentclass.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.10 \usepackage{
                 tikz-3dplot}
\usepackage may only appear in the document preamble, i.e.,
between \documentclass and \begin{document}.


! LaTeX Error: \usepackage before \documentclass.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.11 \usepackage{
                 float}
\usepackage may only appear in the document preamble, i.e.,
between \documentclass and \begin{document}.


! LaTeX Error: \usepackage before \documentclass.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.12 \usepackage{
                 amsmath}
\usepackage may only appear in the document preamble, i.e.,
between \documentclass and \begin{document}.


! LaTeX Error: \usepackage before \documentclass.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.13 \usepackage{
                 inputenc}
\usepackage may only appear in the document preamble, i.e.,
between \documentclass and \begin{document}.


! LaTeX Error: \usepackage before \documentclass.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.14 \usepackage{
                 subfigure}	
\usepackage may only appear in the document preamble, i.e.,
between \documentclass and \begin{document}.


! LaTeX Error: \usepackage before \documentclass.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.15 \usepackage{
                 listings}
\usepackage may only appear in the document preamble, i.e.,
between \documentclass and \begin{document}.


! LaTeX Error: \usepackage before \documentclass.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.16 \usepackage{
                 amsmath,amsfonts,amssymb}
\usepackage may only appear in the document preamble, i.e.,
between \documentclass and \begin{document}.


! LaTeX Error: \usepackage before \documentclass.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.17 \usepackage[English]{
                          babel}
\usepackage may only appear in the document preamble, i.e.,
between \documentclass and \begin{document}.


! Package babel Error: Unknown language `english'. Either you have
(babel)                misspelled its name, it has not been installed,
(babel)                or you requested it in a previous run. Fix its name,
(babel)                install it or just rerun the file, respectively.

See the babel package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.18 \selectlanguage{English}
                             
You may proceed, but expect wrong results


! LaTeX Error: \usepackage before \documentclass.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.19 \usepackage{
                 selinput}
\usepackage may only appear in the document preamble, i.e.,
between \documentclass and \begin{document}.

! Undefined control sequence.
l.20 \SelectInputMappings
                         {%
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.21   a
        acute={รก},
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

Missing character: There is no a in font nullfont!
Missing character: There is no a in font nullfont!
Missing character: There is no c in font nullfont!
Missing character: There is no u in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no = in font nullfont!
LaTeX Font Info:    Try loading font information for +cmr on input line 21.
LaTeX Font Info:    No file cmr.fd. on input line 21.

LaTeX Font Warning: Font shape `/cmr/m/n' undefined
(Font)              using `/cmr/m/n' instead on input line 21.

! Corrupted NFSS tables.
wrong@fontshape ...message {Corrupted NFSS tables}
                                                  error@fontshape else let f...
l.21   aacute={รก
                 },
This error message was generated by an \errmessage
command, so I can't give any explicit help.
Pretend that you're Hercule Poirot: Examine all clues,
and deduce the truth by order and method.


LaTeX Font Warning: Font shape `/cmr/m/n' undefined
(Font)              using `OT1/cmr/m/n' instead on input line 21.

Missing character: There is no , in font nullfont!
Missing character: There is no n in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no i in font nullfont!
Missing character: There is no l in font nullfont!
Missing character: There is no d in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no = in font nullfont!
Missing character: There is no , in font nullfont!
Missing character: There is no E in font nullfont!
Missing character: There is no u in font nullfont!
Missing character: There is no r in font nullfont!
Missing character: There is no o in font nullfont!
Missing character: There is no = in font nullfont!

! Package inputenc Error: Unicode character โฌ (U+20AC)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.23   Euro={โฌ
                }
You may provide a definition with
\DeclareUnicodeCharacter 


! LaTeX Error: \usepackage before \documentclass.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.25 \usepackage[demo]{
                       graphicx}
\usepackage may only appear in the document preamble, i.e.,
between \documentclass and \begin{document}.


! LaTeX Error: \usepackage before \documentclass.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.26 \usepackage{
                 subfig}
\usepackage may only appear in the document preamble, i.e.,
between \documentclass and \begin{document}.


! LaTeX Error: \usepackage before \documentclass.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.27 \usepackage{
                 dirtytalk}
\usepackage may only appear in the document preamble, i.e.,
between \documentclass and \begin{document}.


Overfull \hbox (30.00003pt too wide) in paragraph at lines 21--28
[]\/cmr/m/n/10 ^^Sa
 []


Overfull \hbox (5.55557pt too wide) in paragraph at lines 21--28
\/cmr/m/n/10 ~n
 []

(/usr/local/texlive/2018/texmf-dist/tex/latex/titlesec/titlesec.sty
Package: titlesec 2016/03/21 v2.10.2 Sectioning titles
\ttl@box=\box28
\beforetitleunit=\skip44
\aftertitleunit=\skip45
\ttl@plus=\dimen111
\ttl@minus=\dimen112
\ttl@toksa=\toks19
\titlewidth=\dimen113
\titlewidthlast=\dimen114
\titlewidthfirst=\dimen115

! Undefined control sequence.
<argument> \section 
                    
l.1287 \ttl@extract\section
                           
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


Package titlesec Warning: Non standard sectioning command detected
(titlesec)                Using default spacing and no format.

! Undefined control sequence.
<argument> \subsection 
                       
l.1288 \ttl@extract\subsection
                              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


Package titlesec Warning: Non standard sectioning command detected
(titlesec)                Using default spacing and no format.

! Undefined control sequence.
<argument> \subsubsection 
                          
l.1289 \ttl@extract\subsubsection
                                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


Package titlesec Warning: Non standard sectioning command detected
(titlesec)                Using default spacing and no format.

! Undefined control sequence.
<argument> \paragraph 
                      
l.1290 \ttl@extract\paragraph
                             
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


Package titlesec Warning: Non standard sectioning command detected
(titlesec)                Using default spacing and no format.

! Undefined control sequence.
<argument> \subparagraph 
                         
l.1291 \ttl@extract\subparagraph
                                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


Package titlesec Warning: Non standard sectioning command detected
(titlesec)                Using default spacing and no format.

) (/usr/local/texlive/2018/texmf-dist/tex/latex/etoolbox/etoolbox.sty
Package: etoolbox 2018/02/11 v2.5e e-TeX tools for LaTeX (JAW)
\etb@tempcnta=\count92
)
(/usr/local/texlive/2018/texmf-dist/tex/latex/natbib/natbib.sty
Package: natbib 2010/09/13 8.31b (PWD, AO)
\bibhang=\skip46
\bibsep=\skip47

! Undefined control sequence.
l.640  {\@listi
                \global\bibsep\itemsep \global\advance\bibsep by\parsep}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

LaTeX Info: Redefining \cite on input line 694.
\c@NAT@ctr=\count93

! LaTeX Error: Environment thebibliography undefined.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.1063 \renewenvironment{thebibliography}
                                         [1]{%
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

) (/usr/local/texlive/2018/texmf-dist/tex/latex/amscls/amsthm.sty
Package: amsthm 2017/10/31 v2.20.4
\thm@style=\toks20
\thm@bodyfont=\toks21
\thm@headfont=\toks22
\thm@notefont=\toks23
\thm@headpunct=\toks24
\thm@preskip=\skip48
\thm@postskip=\skip49
\thm@headsep=\skip50
\dth@everypar=\toks25
)
\c@definition=\count94


! LaTeX Error: No counter 'chapter' defined.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.82 \newtheorem{definition}{Definition}[chapter]
                                                 
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

\c@example=\count95

! LaTeX Error: No counter 'chapter' defined.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.86 \newtheorem{example}{Example}[chapter]
                                           
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

(/usr/local/texlive/2018/texmf-dist/tex/latex/caption/caption.sty
Package: caption 2016/02/21 v3.3-144 Customizing captions (AR)

(/usr/local/texlive/2018/texmf-dist/tex/latex/caption/caption3.sty
Package: caption3 2016/05/22 v1.7-166 caption3 kernel (AR)
Package caption3 Info: TeX engine: e-TeX on input line 67.

(/usr/local/texlive/2018/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 2014/10/28 v1.15 key=value parser (DPC)
\KV@toks@=\toks26
)
\captionmargin=\dimen116
\captionmargin@=\dimen117
\captionwidth=\dimen118
\caption@tempdima=\dimen119
\caption@indent=\dimen120
\caption@parindent=\dimen121
\caption@hangindent=\dimen122
\abovecaptionskip=\skip51
\belowcaptionskip=\skip52
Package caption Info: Unknown document class (or package),
(caption)             standard defaults will be used.
)

Package caption Warning: Unsupported document class (or package) detected,
(caption)                usage of the caption package is not recommended.
See the caption package documentation for explanation.

Package caption Info: \@makecaption = undefined.
\c@ContinuedFloat=\count96
) (/usr/local/texlive/2018/texmf-dist/tex/latex/subfig/subfig.sty
Package: subfig 2005/06/28 ver: 1.3 subfig package
\c@KVtest=\count97
\sf@farskip=\skip53
\sf@captopadj=\dimen123
\sf@capskip=\skip54
\sf@nearskip=\skip55

! Missing \endcsname inserted.
<to be read again> 
                   \@classoptionslist 
l.297 \ProcessPackageOptions
                            
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

\c@subfigure=\count98

! LaTeX Error: No counter 'figure' defined.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

\c@subfigure@save=\count99
! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

Missing character: There is no d in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no p in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no h in font nullfont!
! Extra \endcsname.
\newcounter ...ifdefinable \csname c@#1\endcsname 
                                                  {\@definecounter {#1}}\@if...
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
I'm ignoring this, since I wasn't doing a \csname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

\c@=\count100
Missing character: There is no d in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no p in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no h in font nullfont!
! Extra \endcsname.
\@definecounter ...ewcount \csname c@#1\endcsname 
                                                  \setcounter {#1}\z@ \globa...
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
I'm ignoring this, since I wasn't doing a \csname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

Missing character: There is no d in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no p in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no h in font nullfont!
! Extra \endcsname.
\@ifundefined #1->\ifcsname #1\endcsname 
                                         \@ifundefin@d@i \else \@ifundefin@d...
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
I'm ignoring this, since I wasn't doing a \csname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing number, treated as zero.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

Missing character: There is no d in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no p in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no h in font nullfont!
! Extra \endcsname.
<argument> ...xt@figure\endcsname depth\endcsname 
                                                  \z@ \relax 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
I'm ignoring this, since I wasn't doing a \csname.

! Missing number, treated as zero.
<to be read again> 
                   \relax 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   \relax 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

Missing character: There is no d in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no p in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no h in font nullfont!
! Extra \endcsname.
\@definecounter ...r \let \csname cl@#1\endcsname 
                                                  \@empty \@addtoreset {#1}{...
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
I'm ignoring this, since I wasn't doing a \csname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

Missing character: There is no d in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no p in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no h in font nullfont!
! Extra \endcsname.
\@definecounter ...er \let \csname p@#1\endcsname 
                                                  \@empty \expandafter \gdef...
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
I'm ignoring this, since I wasn't doing a \csname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

Missing character: There is no d in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no p in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no h in font nullfont!
! Extra \endcsname.
\@ifundefined #1->\ifcsname #1\endcsname 
                                         \@ifundefin@d@i \else \@ifundefin@d...
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
I'm ignoring this, since I wasn't doing a \csname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing number, treated as zero.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

Missing character: There is no d in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no p in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no h in font nullfont!
! Extra \endcsname.
<argument> ...xt@figure\endcsname depth\endcsname 
                                                  \@ne \relax 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
I'm ignoring this, since I wasn't doing a \csname.

Missing character: There is no ^^A in font nullfont!
! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@figure 
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Use of \the doesn't match its definition.
\caption@ifatletter ->\ifnum \the \catcode 
                                           `\@ =11 \expandafter \@firstoftwo...
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
<argument> ...lineno\endcsname {\the \inputlineno 
                                                  }
l.298 ...ined{c@subfigure}{\newsubfloat{figure}}{}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
<write> ...=\string \count \the \allocationnumber 
                                                  
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

\c@subtable=\count

! LaTeX Error: No counter 'table' defined.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Use of \the doesn't match its definition.
<write> ...=\string \count \the \allocationnumber 
                                                  
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

\c@subtable@save=\count
! Missing \endcsname inserted.
<to be read again> 
                   \ext@table 
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

Missing character: There is no d in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no p in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no h in font nullfont!
! Extra \endcsname.
\@ifundefined #1->\ifcsname #1\endcsname 
                                         \@ifundefin@d@i \else \@ifundefin@d...
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
I'm ignoring this, since I wasn't doing a \csname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@table 
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@table 
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Missing \endcsname inserted.
<to be read again> 
                   \ext@table 
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Use of \the doesn't match its definition.
\caption@ifatletter ->\ifnum \the \catcode 
                                           `\@ =11 \expandafter \@firstoftwo...
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
\g@addto@macro ...fter {#1#2}\xdef #1{\the \toks@ 
                                                  }\endgroup 
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
<argument> ...lineno\endcsname {\the \inputlineno 
                                                  }
l.299 ...efined{c@subtable}{\newsubfloat{table}}{}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
\g@addto@macro ...fter {#1#2}\xdef #1{\the \toks@ 
                                                  }\endgroup 
l.316 }
       
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
<write> ... =\string \skip \the \allocationnumber 
                                                  
l.317 \newskip\sf@top
                     
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

\sf@top=\skip
! Use of \the doesn't match its definition.
<write> ... =\string \skip \the \allocationnumber 
                                                  
l.318 \newskip\sf@bottom
                        
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

\sf@bottom=\skip
! Use of \the doesn't match its definition.
\g@addto@macro ...fter {#1#2}\xdef #1{\the \toks@ 
                                                  }\endgroup 
l.508   \let\sf@addcontentsline=\addcontentsline}
                                                 
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.


Overfull \hbox (20.0pt too wide) in paragraph at lines 298--516
[]
 []

! Use of \the doesn't match its definition.
\g@addto@macro ...fter {#1#2}\xdef #1{\the \toks@ 
                                                  }\endgroup 
l.590     \fi}}
               
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
\g@addto@macro ...fter {#1#2}\xdef #1{\the \toks@ 
                                                  }\endgroup 
l.598 }
       
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \the doesn't match its definition.
\g@addto@macro ...fter {#1#2}\xdef #1{\the \toks@ 
                                                  }\endgroup 
l.677 }
       
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

)
! Undefined control sequence.
<argument> \undefinedpagestyle 
                               
l.104 \pagestyle{fancy}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.105 \fancyhf
              {}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.106 \rhead
            {\leftmark}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.107 \lhead
            {\thepage}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.107 \lhead{\thepage
                     }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.115 \graphicspath
                   {{./Figures/}}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.115 \graphicspath{{.
                      /Figures/}}
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

Missing character: There is no . in font nullfont!
Missing character: There is no / in font nullfont!
Missing character: There is no F in font nullfont!
Missing character: There is no i in font nullfont!
Missing character: There is no g in font nullfont!
Missing character: There is no u in font nullfont!
Missing character: There is no r in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no s in font nullfont!
Missing character: There is no / in font nullfont!

Overfull \hbox (20.0pt too wide) in paragraph at lines 115--116
[] 
 []

! Undefined control sequence.
l.130 \newglossaryentry
                       {pi}{
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.130 \newglossaryentry{p
                         i}{
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

Missing character: There is no p in font nullfont!
Missing character: There is no i in font nullfont!
Missing character: There is no n in font nullfont!
Missing character: There is no a in font nullfont!
Missing character: There is no m in font nullfont!
Missing character: There is no e in font nullfont!
Missing character: There is no = in font nullfont!
! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Missing = inserted for ifdim.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
                   p@ 
l.131     name={\ensuremath{\pi}
                                },
(That makes 100 errors; please try again.) 
Here is how much of TeX's memory you used:
 3152 strings out of 492650
 44409 string characters out of 6129648
 117099 words of memory out of 5000000
 7076 multiletter control sequences out of 15000+600000
 3640 words of font info for 14 fonts, out of 8000000 for 9000
 1141 hyphenation exceptions out of 8191
 36i,1n,38p,788b,93s stack positions out of 5000i,500n,10000p,200000b,80000s

No pages of output.
